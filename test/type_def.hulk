function test() => x + y;

protocol A{
    test(x:Object, x:Object): Object;
}

type Animal inherits A{
    test(x: Number) => x + y;
}
type Perro inherits Animal{
    test() => x - y;
    test() => x - y;
}

function test2(x, y){
    x + y;
    x - y;
}

type Point(x, x) {
    x: Yo = x;
    y = y;
}
type PolarPoint(phi, rho) inherits Point(rho * sin(phi), rho * cos(phi)) {
    phi = phi;
    rho = rho;
}

print(test(5, 5) + test2(4, 5));